apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.tm.book_of_exercises"
        minSdkVersion 15
        maxSdkVersion 28
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
//    aaptOptions{
//        cruncherEnabled = false
//    }

    // 内存溢出
//    dexOptions {
//        javaMaxHeapSize "4g"}
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    // 添加 Retrofit库的依赖
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    // Retrofit库
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    // Okhttp库
    implementation 'com.squareup.okio:okio:1.14.0'
    // Retrofit支持多种数据解析方式
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    //  Gson
    implementation 'com.squareup.retrofit2:converter-jackson:2.0.2'
    //Jackson
    // Retrofit支持多种网络请求适配器方式：guava、Java8和rxjava  默认使用 Android的 CallAdapter
    //compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'
    //替换ListView
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation project(':IMKit')
    //处理rxjava内存泄漏 RxDialogFragment依赖
    // 注意：不要使用组合的play-services目标，它会引入数十个库，使应用程序膨胀，而是仅指定应用程序使用的特定Google Play服务API。
    //compile 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'
    //compile 'com.trello.rxlifecycle2:rxlifecycle-android:2.0.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.0.0'
    implementation project(':ocr_ui')

    //Glide需要依赖Support Library v4，别忘了。其实Support Library v4已经是应用程序的标配了
    //同 时将Activity/Fragment作为with()参数的好处是：图片加载会和Activity/Fragment的生命周期保持一致，比如在Paused状态暂停加载，在Resumed的时候又自动重新加载。所以我建议传参的时候传递Activity 和 Fragment给Glide，而不是Context。
    // https://blog.csdn.net/qq_31679853/article/details/78616289
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    implementation 'com.android.support:support-v4:27.1.1'
}
